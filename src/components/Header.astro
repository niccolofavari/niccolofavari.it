---
// src/components/Header.astro
import { SITE_TITLE_EN, SITE_TITLE_IT, NAV_LINKS_CONFIG } from '../site-config';

const { lang, currentPath } = Astro.props; 

const siteTitle = lang === 'it' ? SITE_TITLE_IT : SITE_TITLE_EN;
const navLinks = lang === 'it' ? NAV_LINKS_CONFIG.it : NAV_LINKS_CONFIG.en;

const otherLang = lang === 'en' ? 'it' : 'en';
let otherLangPath = `/${otherLang}/`; 

if (currentPath) {
  const pathParts = currentPath.split('/').filter(p => p); 
  if (pathParts.length > 1) { 
    pathParts[0] = otherLang; 
    otherLangPath = `/${pathParts.join('/')}${currentPath.endsWith('/') && pathParts.length === 2 ? '/' : ''}`;
    
    const currentCategorySlug = pathParts[1];
    const currentLangNavs = NAV_LINKS_CONFIG[lang];
    const otherLangNavs = NAV_LINKS_CONFIG[otherLang];

    if (currentLangNavs && otherLangNavs) {
        const currentNavLinkIndex = currentLangNavs.findIndex(link => link.categorySlug === currentCategorySlug);
        if (currentNavLinkIndex !== -1 && otherLangNavs[currentNavLinkIndex] && otherLangNavs[currentNavLinkIndex].categorySlug !== 'home') {
            pathParts[1] = otherLangNavs[currentNavLinkIndex].categorySlug;
            otherLangPath = `/${pathParts.join('/')}${currentPath.endsWith('/') && pathParts.length === 2 ? '/' : ''}`;
        }
    }
  }
}
---
<header class="site-header">
  <nav class="site-header__nav container">
    <div class="site-header__brand">
      <a href={`/${lang}/`}>{siteTitle}</a>
    </div>
    <div class="site-header__actions">
      <a 
        href={otherLangPath} 
        aria-label={lang === 'en' ? 'Switch to Italian' : 'Passa all\'Inglese'}
        class="site-header__lang-switcher"
      >
        {otherLang.toUpperCase()}
      </a>
      <div class="site-header__menu">
        {navLinks.filter(link => link.categorySlug !== "home").map(link => {
          const isActive = currentPath === link.href || (currentPath && link.href !== `/${lang}/` && currentPath.startsWith(link.href));
          return (
            <a 
              href={link.href} 
              class:list={["site-header__menu-link", { "is-active": isActive }]}
              aria-current={isActive ? "page" : false}
            >
              {link.name}
            </a>
          );
        })}
      </div>
      {/* TODO: Mobile menu (hamburger) can be added here */}
    </div>
  </nav>
</header>

<style lang="scss">
  @use '../styles/utils/variables' as *;

  .site-header {
    background-color: var(--color-background-secondary, lighten($color-bg-light, 5%)); // Using a fallback SCSS variable
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    position: sticky;
    top: 0;
    z-index: $z-index-sticky;
    padding: $spacing-sm 0;

    .dark & { // Dark mode styles for header
        background-color: var(--color-background-secondary-dark, darken($color-bg-dark, 5%));
        box-shadow: 0 2px 4px rgba(0,0,0,0.3);
    }
  }

  .site-header__nav {
    // .container class is defined in global.scss
    display: flex;
    flex-wrap: wrap; // Allow wrapping on small screens
    align-items: center;
    justify-content: space-between;
  }

  .site-header__brand {
    font-size: $font-size-xl * 1.2; // Slightly larger
    font-weight: bold;
    a {
      color: var(--color-text); // Use CSS var for text color
      text-decoration: none;
      &:hover, &:focus {
        color: var(--color-primary); // Use CSS var for primary color
      }
    }
  }

  .site-header__actions {
    display: flex;
    align-items: center;
    margin-top: $spacing-sm; // For when it wraps on small screens
    @media (min-width: $breakpoint-md) {
      margin-top: 0; // Reset margin on larger screens
    }
  }

  .site-header__lang-switcher {
    padding: ($spacing-sm / 2) $spacing-sm;
    border-radius: $border-radius-md;
    text-decoration: none;
    font-size: $font-size-sm;
    text-transform: uppercase;
    font-weight: 600;
    color: var(--color-text);
    margin-right: $spacing-sm;
    transition: background-color $transition-base;

    &:hover, &:focus {
      background-color: rgba(0,0,0,0.05);
      color: var(--color-primary);
    }
    .dark & {
        &:hover, &:focus {
            background-color: rgba(255,255,255,0.1);
        }
    }
  }

  .site-header__menu {
    margin-left: $spacing-xs; // Small space after lang switcher
  }
  
  .site-header__menu-link {
    padding: ($spacing-sm / 2) $spacing-sm;
    text-decoration: none;
    color: var(--color-text);
    border-radius: $border-radius-md;
    transition: background-color $transition-base, color $transition-base;
    font-size: $font-size-md;

    &:hover, &:focus {
      background-color: rgba(0,0,0,0.05);
      color: var(--color-primary);
    }
    .dark & {
        &:hover, &:focus {
            background-color: rgba(255,255,255,0.1);
        }
    }

    &.is-active {
      background-color: rgba(0,0,0,0.07);
      font-weight: 600;
      color: var(--color-primary);
      .dark & {
        background-color: rgba(255,255,255,0.15);
      }
    }
  }
</style>
