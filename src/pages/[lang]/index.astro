---
// src/pages/[lang]/index.astro
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SITE_TITLE_EN, SITE_TITLE_IT, SITE_DESCRIPTION_EN, SITE_DESCRIPTION_IT, NAV_LINKS_CONFIG } from '../../site-config';

export async function getStaticPaths() {
  return [
    { params: { lang: 'en' } },
    { params: { lang: 'it' } },
  ];
}

const { lang } = Astro.params;
const isItalian = lang === 'it';

const allEntries = await getCollection(lang as 'en' | 'it');

const groupedEntries = allEntries.reduce((acc, entry) => {
  const [categorySlug] = entry.slug.split('/');
  if (!acc[categorySlug]) {
    acc[categorySlug] = [];
  }
  acc[categorySlug].push(entry);
  return acc;
}, {});

// Sort entries within each category by publication date
for (const categorySlug in groupedEntries) {
  groupedEntries[categorySlug].sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
}

const navLinks = isItalian ? NAV_LINKS_CONFIG.it : NAV_LINKS_CONFIG.en;

const categoryDisplayOrder = navLinks
  .map(link => link.categorySlug)
  .filter(slug => slug !== 'home' && groupedEntries[slug]);

const siteTitle = isItalian ? SITE_TITLE_IT : SITE_TITLE_EN;
const siteDescription = isItalian ? SITE_DESCRIPTION_EN : SITE_DESCRIPTION_IT;

function getCategoryName(slug) {
  const link = navLinks.find(l => l.categorySlug === slug);
  return link ? link.name : slug;
}

function getEntryUrl(entry) {
  const [category, ...slugParts] = entry.slug.split('/');
  return `/${lang}/${category}/${slugParts.join('/')}`;
}
---
<BaseLayout title={siteTitle} description={siteDescription} lang={lang}>
  <div class="home-page container">
    <section class="hero">
      <h1 class="hero__title">{siteTitle}</h1>
      <p class="hero__description">{siteDescription}</p>
    </section>

    {categoryDisplayOrder.map(categorySlug => (
      <section class="category-section">
        <h2 class="category-title">{getCategoryName(categorySlug)}</h2>
        <div class="articles-grid">
          {groupedEntries[categorySlug].map(entry => (
            <a href={getEntryUrl(entry)} class="article-card">
              <img 
                src={entry.data.coverImage || 'https://placehold.co/600x400/243831/FFFFFF/png'} 
                alt={entry.data.coverImageAlt || 'Placeholder image'} 
                class="article-card__image"
              />
              <div class="article-card__content">
                <h3 class="article-card__title">{entry.data.title}</h3>
                <p class="article-card__meta">
                  {new Date(entry.data.pubDate).toLocaleDateString(lang, { year: 'numeric', month: 'long', day: 'numeric' })}
                </p>
                <p class="article-card__excerpt">{entry.data.description}</p>
              </div>
            </a>
          ))}
        </div>
      </section>
    ))}
  </div>
</BaseLayout>
